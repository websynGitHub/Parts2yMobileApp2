<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:behaviors="clr-namespace:YPS.Behaviours"
             x:Class="YPS.Views.ProfileSelectionPage"
           
             NavigationPage.HasNavigationBar="False" 
             BackgroundColor="#E9E9E9"
              xmlns:sfinput="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
             xmlns:combobox="clr-namespace:Syncfusion.XForms.ComboBox;assembly=Syncfusion.SfComboBox.XForms"
             xmlns:FontAwsmLbl="clr-namespace:YPS.CustomRenders"
              xmlns:StaticIcons="clr-namespace:YPS.CommonClasses"
             xmlns:sfbuttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms">

    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="BoxView" x:Key="StyleBoxView">
                <Setter Property="HeightRequest" Value="3"/>
                <Setter Property="BackgroundColor" Value="{Binding BgColor}"/>
                <Setter Property="Margin" Value="0,2,0,0"/>
            </Style>

            <Style x:Key="closeButton" TargetType="Button">
                <Setter Property="Text" Value="UPLOAD"/>
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="BackgroundColor" Value="#269DC9"/>
                <Setter Property="HorizontalOptions" Value="EndAndExpand"/>
                <Setter Property="VerticalOptions" Value="CenterAndExpand"/>
                <Setter Property="Padding" Value="{OnPlatform iOS='10,0,10,0',Android=0}"/>
                <Setter Property="FontFamily" Value="{DynamicResource LatoRegular}" />
                <Setter Property="FontSize" Value="18"/>
            </Style>

            <Style x:Key="LabelStyleInDropDown" TargetType="Label">
                <Setter Property="TextColor" Value="Black"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
                <Setter Property="LineBreakMode" Value="TailTruncation"/>
                <Setter Property="FontFamily" Value="{DynamicResource LatoRegular}" />
                <Setter Property="FontSize" Value="18"/>
            </Style>

            <Style x:Key="DropDownImg" TargetType="Image">
                <Setter Property="Source" Value="dropdownarrow.png"/>
                <Setter Property="HorizontalOptions" Value="EndAndExpand"/>
                <Setter Property="VerticalOptions" Value="CenterAndExpand"/>
                <Setter Property="HeightRequest" Value="17"/>
                <Setter Property="WidthRequest" Value="16"/>
                <Setter Property="Margin" Value="0,0,2,0"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <AbsoluteLayout>
            <Grid HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" RowSpacing="0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid x:Name="headerpart" Grid.Row="0" RowDefinitions="*" ColumnDefinitions="60,*" Style="{StaticResource HeaderMainGrid}">

                    <StackLayout Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Margin="10,10,10,10"
                                 VerticalOptions="StartAndExpand" Spacing="15">
                        <FontAwsmLbl:FontAwesomeIconLabel Text="{x:Static StaticIcons:Icons.arrowLeft}"
                                                  TextColor="#FFFFFF" HorizontalOptions="Start"
                                                  VerticalOptions="Start" Style="{StaticResource LblIconStyle}">
                            <FontAwsmLbl:FontAwesomeIconLabel.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Backevnttapped}"/>
                            </FontAwsmLbl:FontAwesomeIconLabel.GestureRecognizers>
                        </FontAwsmLbl:FontAwesomeIconLabel>

                    </StackLayout>

                    <Grid Grid.Row="0" RowSpacing="5" BackgroundColor="{Binding BgColor}"  Margin="8,10,0,20" Padding="0,0,0,0"
                      HorizontalOptions="StartAndExpand" VerticalOptions="StartAndExpand" Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Text="Settings" VerticalOptions="CenterAndExpand"
                   HorizontalOptions="StartAndExpand" TextColor="White"
                                          Style="{StaticResource LableWithMediumFont}"/>
                    </Grid>

                </Grid>

                <Grid Grid.Row="1" ColumnSpacing="2"   HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" 
                    Padding="0" RowSpacing="0" Margin="6,0,6,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.30*"/>
                        <ColumnDefinition Width="0.30*"/>
                    </Grid.ColumnDefinitions>
                    <StackLayout Grid.Column="0">
                        <Label Text="{Binding DefaultSettinglabel}" Style="{DynamicResource LableWithMediumFont}"
                                 Padding="0,8,0,0" HorizontalOptions="Center" TextColor="{Binding settingsTextColor}"
                                VerticalOptions="Center" HorizontalTextAlignment="Center" Margin="0,2,0,2">
                        </Label>
                        <BoxView Style="{StaticResource StyleBoxView}" IsVisible="{Binding settingbox}" />
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ICommandSettings}"/>
                        </StackLayout.GestureRecognizers>
                    </StackLayout>
                    <StackLayout Grid.Column="1">
                        <Label x:Name="UpdatePBtn" Text="{Binding UpdateProfilelabel}" Style="{DynamicResource LableWithMediumFont}" 
                                Padding="0,8,0,0" HorizontalOptions="Center" VerticalOptions="Center"
                               HorizontalTextAlignment="Center" TextColor="{Binding profileTextColor}" Margin="0,2,0,2">
                        </Label>
                        <BoxView Style="{StaticResource StyleBoxView}" IsVisible="{Binding profilebox}"/>
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ICommandProfile}"/>
                        </StackLayout.GestureRecognizers>
                    </StackLayout>
                </Grid>

                <StackLayout Grid.Row="2" Orientation="Vertical" VerticalOptions="FillAndExpand"
                             Margin="6,0,6,0">
                    <StackLayout.Resources>
                        <ResourceDictionary>
                            <Style TargetType="Frame">
                                <Setter Property="HasShadow" Value="False"/>
                                <Setter Property="OutlineColor" Value="Gray"/>
                                <Setter Property="CornerRadius" Value="7"/>
                                <Setter Property="Padding" Value="4"/>
                            </Style>
                            <Style TargetType="Label">
                                <Setter Property="TextColor" Value="Black"/>
                            </Style>
                            <Style TargetType="Entry" x:Key="UpdateProfileEty">
                                <Setter Property="TextColor" Value="Black"/>
                                <Setter Property="FontSize" Value="Small"/>
                            </Style>
                        </ResourceDictionary>
                    </StackLayout.Resources>

                    <StackLayout IsVisible="{Binding settingsVisibility}" Orientation="Vertical"
                                     VerticalOptions="StartAndExpand">
                        <ScrollView IsVisible="{Binding settingsVisibility}">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1"/>
                                    <RowDefinition Height="55"/>
                                    <RowDefinition Height="55"/>
                                    <RowDefinition Height="55"/>
                                    <RowDefinition Height="55"/>
                                </Grid.RowDefinitions>

                                <sfinput:SfTextInputLayout Grid.Row="1" Hint="{Binding Companylabel,Mode=TwoWay}"
                                                      ErrorColor="Red" HasError="{Binding companyHaserror}"
                                                       Style="{StaticResource SfInputLayout}" ContainerBackgroundColor="White">
                                    <combobox:SfComboBox x:Name="pkrCompany" Text="{Binding CompanyName,Mode=TwoWay}" ClassId="CompanyClassID"
                                                     DisplayMemberPath="Name" DataSource="{Binding CompanyList, Mode=TwoWay}"
                                                       SelectionChanged="ComapanyList_IndexChanged"
                                                             Style="{StaticResource SfComboBoxTextStyle}">
                                        <combobox:SfComboBox.HeightRequest>
                                            <OnPlatform x:TypeArguments="x:Double">
                                                <On Platform="iOS">20</On>
                                                <On Platform="Android">50</On>
                                            </OnPlatform>
                                        </combobox:SfComboBox.HeightRequest>
                                    </combobox:SfComboBox>
                                </sfinput:SfTextInputLayout>

                                <sfinput:SfTextInputLayout Grid.Row="2" Hint="{Binding projectlabel,Mode=TwoWay}" 
                                                       ErrorColor="Red" HasError="{Binding projectHaserror}"
                                                       Style="{StaticResource SfInputLayout}" ContainerBackgroundColor="White">
                                    <combobox:SfComboBox x:Name="pkrProject" Text="{Binding ProjectName,Mode=TwoWay}" DataSource="{Binding ProjectList, Mode=TwoWay}"
                                                     DisplayMemberPath="Name" SelectionChanged="ProjectList_IndexChanged"
                                                             Style="{StaticResource SfComboBoxTextStyle}">
                                        <combobox:SfComboBox.HeightRequest>
                                            <OnPlatform x:TypeArguments="x:Double">
                                                <On Platform="iOS">20</On>
                                                <On Platform="Android">50</On>
                                            </OnPlatform>
                                        </combobox:SfComboBox.HeightRequest>
                                    </combobox:SfComboBox>
                                </sfinput:SfTextInputLayout>

                                <sfinput:SfTextInputLayout Grid.Row="3" Hint="{Binding joblabel,Mode=TwoWay}" 
                                                         ErrorColor="Red" HasError="{Binding jobHaserror}"
                                                       Style="{StaticResource SfInputLayout}" ContainerBackgroundColor="White">
                                    <combobox:SfComboBox x:Name="pkrJob" Text="{Binding JobName,Mode=TwoWay}" DataSource="{Binding JobList, Mode=TwoWay}" 
                                                     DisplayMemberPath="Name" SelectionChanged="JobList_IndexChanged"
                                                             Style="{StaticResource SfComboBoxTextStyle}">
                                        <combobox:SfComboBox.HeightRequest>
                                            <OnPlatform x:TypeArguments="x:Double">
                                                <On Platform="iOS">20</On>
                                                <On Platform="Android">50</On>
                                            </OnPlatform>
                                        </combobox:SfComboBox.HeightRequest>
                                    </combobox:SfComboBox>
                                </sfinput:SfTextInputLayout>
                            </Grid>
                        </ScrollView>
                    </StackLayout>

                    <StackLayout IsVisible="{Binding profileVisibility}" Orientation="Vertical"
                                     VerticalOptions="FillAndExpand">
                        <ScrollView>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{Binding UpdateprofiletitleRowHt}"/>
                                    <RowDefinition Height="55"/>
                                    <RowDefinition Height="55"/>
                                    <RowDefinition Height="55"/>
                                    <RowDefinition Height="55"/>
                                    <RowDefinition Height="55"/>
                                    <RowDefinition Height="55"/>
                                    <RowDefinition Height="55"/>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Text="Update Profile" IsVisible="{Binding UpdateprofiletitleVisibility}" 
                                       FontSize="Large" HorizontalOptions="Center"/>

                                <sfinput:SfTextInputLayout Hint="{Binding LoginLbl,Mode=TwoWay}" Grid.Row="1"
                                                       IsEnabled="False" ErrorColor="Red" HasError="{Binding loginIDHaserror}"
                                                       Style="{StaticResource SfInputLayout}" ContainerBackgroundColor="White">
                                    <Entry Text="{Binding LoginID,Mode=TwoWay}" IsReadOnly="True" 
                                               Style="{StaticResource EntryTextStyle}"  IsEnabled="False">
                                        <Entry.HeightRequest>
                                            <OnPlatform x:TypeArguments="x:Double">
                                                <On Platform="iOS">20</On>
                                                <On Platform="Android">50</On>
                                            </OnPlatform>
                                        </Entry.HeightRequest>
                                    </Entry>
                                </sfinput:SfTextInputLayout>

                                <sfinput:SfTextInputLayout Grid.Row="2" Hint="{Binding EmailLbl,Mode=TwoWay}"
                                                       ErrorColor="Red" HasError="{Binding emailHaserror}"
                                                       Style="{StaticResource SfInputLayout}" ContainerBackgroundColor="White">
                                    <Entry Text="{Binding Email,Mode=TwoWay}" Style="{StaticResource EntryTextStyle}">
                                        <Entry.HeightRequest>
                                            <OnPlatform x:TypeArguments="x:Double">
                                                <On Platform="iOS">20</On>
                                                <On Platform="Android">50</On>
                                            </OnPlatform>
                                        </Entry.HeightRequest>
                                    </Entry>
                                </sfinput:SfTextInputLayout>

                                <sfinput:SfTextInputLayout Grid.Row="3" Hint="{Binding GivenNameLbl,Mode=TwoWay}"
                                                       ErrorColor="Red" HasError="{Binding givennameHaserror}"
                                                       Style="{StaticResource SfInputLayout}" ContainerBackgroundColor="White">
                                    <Entry Text="{Binding GivenName,Mode=TwoWay}" Style="{StaticResource EntryTextStyle}">
                                        <Entry.HeightRequest>
                                            <OnPlatform x:TypeArguments="x:Double">
                                                <On Platform="iOS">20</On>
                                                <On Platform="Android">50</On>
                                            </OnPlatform>
                                        </Entry.HeightRequest>
                                    </Entry>
                                </sfinput:SfTextInputLayout>

                                <sfinput:SfTextInputLayout Grid.Row="4" Hint="{Binding FamilyNameLbl,Mode=TwoWay}" 
                                                       Style="{StaticResource SfInputLayout}" ContainerBackgroundColor="White">
                                    <Entry Text="{Binding FamilyName,Mode=TwoWay}" Style="{StaticResource EntryTextStyle}">
                                        <Entry.HeightRequest>
                                            <OnPlatform x:TypeArguments="x:Double">
                                                <On Platform="iOS">20</On>
                                                <On Platform="Android">50</On>
                                            </OnPlatform>
                                        </Entry.HeightRequest>
                                    </Entry>
                                </sfinput:SfTextInputLayout>

                                <sfinput:SfTextInputLayout Grid.Row="5"  Hint="{Binding TimeZoneLbl,Mode=TwoWay}"
                                                       ErrorColor="Red" HasError="{Binding timezoneHaserror}"
                                                       Style="{StaticResource SfInputLayout}" InputViewPadding="0"  ContainerBackgroundColor="White">
                                    <StackLayout Orientation="Horizontal" x:Name="TimeZoneLabel">
                                        <Label Style="{StaticResource LabelStyleInDropDown}" 
                                                   Text="{Binding TimeZoneTextDisplay,Mode=TwoWay}"
                                           Margin="12,0,0,0"/>

                                        <Image Style="{StaticResource DropDownImg}"/>
                                        <StackLayout.GestureRecognizers>
                                            <TapGestureRecognizer Tapped="TimeZone_Tapped"/>
                                        </StackLayout.GestureRecognizers>
                                        <StackLayout.HeightRequest>
                                            <OnPlatform x:TypeArguments="x:Double">
                                                <On Platform="iOS">47</On>
                                                <On Platform="Android">50</On>
                                            </OnPlatform>
                                        </StackLayout.HeightRequest>
                                    </StackLayout>
                                </sfinput:SfTextInputLayout>

                                <sfinput:SfTextInputLayout x:Name="languagelayout" Hint="{Binding LangaugeLbl,Mode=TwoWay}" 
                                                               Grid.Row="6" ContainerBackgroundColor="White"
                                                       ErrorColor="Red" HasError="{Binding languageHaserror}"
                                                       Style="{StaticResource SfInputLayout}">

                                    <combobox:SfComboBox x:Name="LanguagePicker" DataSource="{Binding ListOfLanguageName,Mode=TwoWay}" 
                                                     Text="{Binding LangaugeTextDisplay,Mode=TwoWay}"
                                                      SelectionChanged="LanguagePicker_SelectedIndexChanged"
                                                      VerticalOptions="CenterAndExpand" Style="{StaticResource SfComboBoxTextStyle}">
                                        <combobox:SfComboBox.HeightRequest>
                                            <OnPlatform x:TypeArguments="x:Double">
                                                <On Platform="iOS">20</On>
                                                <On Platform="Android">50</On>
                                            </OnPlatform>
                                        </combobox:SfComboBox.HeightRequest>
                                    </combobox:SfComboBox>
                                </sfinput:SfTextInputLayout>


                            </Grid>
                        </ScrollView>
                    </StackLayout>
                </StackLayout>
            </Grid>

            <ContentView AbsoluteLayout.LayoutBounds="0, 0, 1, 1" 
                         AbsoluteLayout.LayoutFlags="All" HorizontalOptions="FillAndExpand" VerticalOptions="End"
                         Margin="6,0,6,2">
                <StackLayout>
                    <sfbuttons:SfButton IsVisible="{Binding settingsVisibility}" Margin="0,0,0,4"
                                                Command="{Binding ICommandSetAsDefault}" Style="{StaticResource SfBtnBlue}"
                                                VerticalOptions="End" HorizontalOptions="FillAndExpand"
                                        BackgroundColor="{Binding BgColor}">
                        <sfbuttons:SfButton.Content>
                            <Label Text="{Binding SetAsDefaultBtn,Mode=TwoWay}" Style="{StaticResource SfButtonTextLbl}"
                                   Padding="0"/>
                        </sfbuttons:SfButton.Content>
                        <sfbuttons:SfButton.Behaviors>
                            <behaviors:ViewTappedButtonBehavior AnimationType="Scale"/>
                        </sfbuttons:SfButton.Behaviors>
                    </sfbuttons:SfButton>

                    <sfbuttons:SfButton  VerticalOptions="End" IsVisible="{Binding profileVisibility}" Grid.Row="7"
                                            HorizontalOptions="FillAndExpand" Margin="0,0,0,4" Command="{Binding ICommandUpdate}" 
                                                Style="{StaticResource SfBtnBlue}" BackgroundColor="{Binding BgColor}">
                        <sfbuttons:SfButton.Content>
                            <Label Text="{Binding UpdateBtn,Mode=TwoWay}" Style="{StaticResource SfButtonTextLbl}"
                                   Padding="0"/>
                        </sfbuttons:SfButton.Content>
                        <sfbuttons:SfButton.Behaviors>
                            <behaviors:ViewTappedButtonBehavior AnimationType="Scale"/>
                        </sfbuttons:SfButton.Behaviors>
                    </sfbuttons:SfButton>
                </StackLayout>

            </ContentView>

            <ContentView x:Name="TimeZoneCntntView" IsVisible="False" BackgroundColor="White" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
                <StackLayout>
                    <Grid Padding="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="45"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="80"/>
                        </Grid.ColumnDefinitions>
                        <Frame Grid.Row="0" Grid.Column="0" BorderColor="Gray" Padding="0" HasShadow="False">
                            <SearchBar x:Name="SearchLoc" Margin="-10" Placeholder="Search..." TextChanged="SearchBar_TextChanged"
                                       BackgroundColor="White" Style="{StaticResource LableWithMediumFont}"/>
                        </Frame>
                        <Button Grid.Row="0" Grid.Column="1" Text="Close" WidthRequest="80"
                                BackgroundColor="Transparent" TextColor="Red" Clicked="TimeZoneClosePopUp"
                                VerticalOptions="CenterAndExpand" Style="{StaticResource closeButton}"/>
                    </Grid>
                    <ListView x:Name="ListViewTimeZ" ItemsSource="{Binding TimeZone,Mode=TwoWay}" ItemTapped="ListView_ItemTapped" 
                              Margin="5">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ViewCell>
                                    <Label Text="{Binding .}" VerticalOptions="CenterAndExpand" Style="{StaticResource LableWithMediumFont}"/>
                                </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackLayout>
            </ContentView>
            <ContentView IsVisible="{Binding IndicatorVisibility}" BackgroundColor="Transparent" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
                <Frame Style="{StaticResource FmForActivityIndicator}">
                    <StackLayout Padding="15">
                        <ActivityIndicator Style="{StaticResource ActivityIndicatorStyle}"/>
                        <Label Style="{StaticResource ActivityIndicatorLbl}"/>
                    </StackLayout>
                </Frame>
            </ContentView>
        </AbsoluteLayout>
    </ContentPage.Content>
</ContentPage>