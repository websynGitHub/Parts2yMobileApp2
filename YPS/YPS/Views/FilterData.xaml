<?xml version="1.0" encoding="utf-8" ?>
<ContentPage  xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:border="clr-namespace:Syncfusion.XForms.Border;assembly=Syncfusion.Core.XForms"
             xmlns:cusEntry="clr-namespace:YPS.CustomRender" BackgroundColor="White"
             xmlns:CustomDate="clr-namespace:YPS.CustomRenders"
              xmlns:sfinput="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
              xmlns:combobox="clr-namespace:Syncfusion.XForms.ComboBox;assembly=Syncfusion.SfComboBox.XForms"
              x:Class="YPS.Views.FilterData"
              xmlns:StaticIcons="clr-namespace:YPS.CommonClasses"
              xmlns:sfbuttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
              xmlns:FontAwsm="clr-namespace:YPS.CustomRenders"
              xmlns:behaviors="clr-namespace:YPS.Behaviours">

    <NavigationPage.TitleView>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Text="Search Data" Style="{StaticResource LblTitleName}"/>
            <Image Grid.Column="1" Source="home.png" Margin="0,0,5,0">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Tapped="GoToHome_Tapped"/>
                </Image.GestureRecognizers>
            </Image>
        </Grid>
    </NavigationPage.TitleView>
    <AbsoluteLayout BackgroundColor="White">
        <Grid BackgroundColor="White" RowSpacing="0" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <StackLayout Grid.Row="0" Spacing="0" Orientation="Horizontal" >
                <StackLayout HorizontalOptions="FillAndExpand">
                    <Label Text="Key" TextColor="{Binding headerTextColor}"  BackgroundColor="{Binding headerBgColor}" Style="{StaticResource filterTabStyle}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding keyTabCommand}"/>
                        </Label.GestureRecognizers>
                    </Label>
                    <BoxView HeightRequest="3" HorizontalOptions="FillAndExpand" BackgroundColor="#269DC9" IsVisible="{Binding headerbox}"/>
                </StackLayout>
                <StackLayout HorizontalOptions="FillAndExpand">
                    <Label Text="Location" TextColor="{Binding locationTextColor}" BackgroundColor="{Binding locationBgColor}" Style="{StaticResource filterTabStyle}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding locationTabCommand}"/>
                        </Label.GestureRecognizers>
                    </Label>
                    <BoxView HeightRequest="3" HorizontalOptions="FillAndExpand" BackgroundColor="#269DC9" IsVisible="{Binding locationbox}"/>
                </StackLayout>
                <StackLayout HorizontalOptions="FillAndExpand">
                    <Label Text="Dates" TextColor="{Binding datesTextColor}" BackgroundColor="{Binding datesBgColor}" Style="{StaticResource filterTabStyle}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding datesTabCommand}"/>
                        </Label.GestureRecognizers>
                    </Label>
                    <BoxView HeightRequest="3" HorizontalOptions="FillAndExpand" BackgroundColor="#269DC9" IsVisible="{Binding datebox}"/>
                </StackLayout>
            </StackLayout>
            <ScrollView Grid.Row="1">
                <Grid BackgroundColor="White" Padding="15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <StackLayout Grid.Row="0" Grid.Column="0" Orientation="Vertical" Spacing="5" IsVisible="{Binding headerVisibility}">
                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.PO.Name}"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.PO.Status}"
                                                   Style="{StaticResource SfInputLayout}" InputViewPadding="12,0,0,0">
                            <Entry AutomationId="AutoKeyForPoNo" x:Name="poNumber" Text="{Binding poNumber}" 
                                     Grid.Row="0" VerticalOptions="CenterAndExpand">
                                <Entry.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </Entry.HeightRequest>
                            </Entry>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.REQNo.Name}"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.REQNo.Status}" InputViewPadding="12,0,0,0"
                                                   Style="{StaticResource SfInputLayout}">
                            <Entry AutomationId="AutoKeyForReqNo" x:Name="reqNumber" Text="{Binding reqNumber}" Grid.Row="0">
                                <Entry.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </Entry.HeightRequest>
                            </Entry>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.ShippingNumber.Name}"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.ShippingNumber.Status}"
                                                   Style="{StaticResource SfInputLayout}" InputViewPadding="12,0,0,0">
                            <Entry AutomationId="AutoKeyForShippingNo"  x:Name="shipNumber" Text="{Binding shipNumber}" Grid.Row="0">
                                <Entry.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </Entry.HeightRequest>
                            </Entry>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.DisciplineName.Name}"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.DisciplineName.Status}"
                                                   Style="{StaticResource SfInputLayout}">
                            <combobox:SfComboBox x:Name="disc_Picker" Text="{Binding DisciplineDefaultValue,Mode=TwoWay}"
                                                 SelectedItem="{Binding SelectedDisciplineValue}" DataSource="{Binding DisciplineNames,Mode=TwoWay}"
                                               HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand">
                                <combobox:SfComboBox.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">20</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </combobox:SfComboBox.HeightRequest>
                            </combobox:SfComboBox>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.ELevelName.Name}"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.ELevelName.Status}"
                                                  Style="{StaticResource SfInputLayout}">
                            <combobox:SfComboBox x:Name="ELevel_Picker" Text="{Binding ELevelDefaultValue,Mode=TwoWay}" 
                                                 SelectedItem="{Binding SelectedELevelValue}" DataSource="{Binding ELevelNames}" 
                                                 HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand">
                                <combobox:SfComboBox.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">20</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </combobox:SfComboBox.HeightRequest>
                            </combobox:SfComboBox>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.Condition.Name}"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.Condition.Status}"
                                                   Style="{StaticResource SfInputLayout}" InputViewPadding="12,0,0,0">
                            <combobox:SfComboBox x:Name="Condition_Picker" Text="{Binding ConditionDefaultValue,Mode=TwoWay}" SelectedItem="{Binding SelectedConditionValue}"
                                                 DataSource="{Binding ConditionNames}" HorizontalOptions="FillAndExpand"
                                                 VerticalOptions="CenterAndExpand">
                                <combobox:SfComboBox.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </combobox:SfComboBox.HeightRequest>
                            </combobox:SfComboBox>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.Expeditor.Name}"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.Expeditor.Status}"
                                                   Style="{StaticResource SfInputLayout}">
                            <combobox:SfComboBox x:Name="Expeditor_Picker" Text="{Binding ExpeditorDefaultValue,Mode=TwoWay}" 
                                                 SelectedItem="{Binding SelectedExpeditorValue}" DataSource="{Binding ExpeditorNames}" 
                                                 HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand"
                                                 >
                                <combobox:SfComboBox.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">20</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </combobox:SfComboBox.HeightRequest>
                            </combobox:SfComboBox>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.PriorityName.Name}"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.PriorityName.Status}"
                                                   Style="{StaticResource SfInputLayout}">
                            <combobox:SfComboBox x:Name="Priority_Picker" Text="{Binding PriorityDefaultValue,Mode=TwoWay}"
                                                 SelectedItem="{Binding SelectedPrioritytValue}"
                                                 DataSource="{Binding PriorityNames}" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand">
                                <combobox:SfComboBox.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">20</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </combobox:SfComboBox.HeightRequest>
                            </combobox:SfComboBox>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.TagNumber.Name}"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.TagNumber.Status}"
                                                   Style="{StaticResource SfInputLayout}" InputViewPadding="12,0,0,0">
                            <Entry x:Name="tagNumber" Text="{Binding tagNumber}" Grid.Row="0" >
                                <Entry.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </Entry.HeightRequest>
                            </Entry>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.IdentCode.Name}"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.IdentCode.Status}"
                                                   Style="{StaticResource SfInputLayout}" InputViewPadding="12,0,0,0">
                            <Entry Text="{Binding Identcode}" Grid.Row="0">
                                <Entry.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </Entry.HeightRequest>
                            </Entry>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.BagNumber.Name}"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.BagNumber.Status}"
                                                   Style="{StaticResource SfInputLayout}" InputViewPadding="12,0,0,0">
                            <Entry Text="{Binding BagNumber}" Grid.Row="0">
                                <Entry.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </Entry.HeightRequest>
                            </Entry>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.yBkgNumber.Name}"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.yBkgNumber.Status}"
                                                   Style="{StaticResource SfInputLayout}" InputViewPadding="12,0,0,0">
                            <Entry Text="{Binding YbkgNumber}" Grid.Row="0">
                                <Entry.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </Entry.HeightRequest>
                            </Entry>
                        </sfinput:SfTextInputLayout>
                    </StackLayout>
                    <StackLayout Grid.Row="0" Grid.Column="0" Orientation="Vertical" Padding="0,5,0,0" IsVisible="{Binding locationVisibility}">

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.PickUp.Name}" InputViewPadding="0"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.PickUp.Status}"
                                                   Style="{StaticResource SfInputLayout}">
                            <StackLayout x:Name="Pickup" Orientation="Horizontal" HeightRequest="23">
                                <Label Style="{StaticResource LabelStyleInDropDown}" Text="{Binding PickUpDefaultValue_L}" Margin="12,0,0,0"/>

                                <!--<FontAwsm:FontAwesomeIconLabel Text="{x:Static StaticIcons:Icons.sortdown}" Style="{StaticResource FALabelStyleInDropDown}"></FontAwsm:FontAwesomeIconLabel>-->
                                <Image Style="{StaticResource DropDownImg}"/>
                                <StackLayout.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding PickUp_Picker_LCommand}"/>
                                </StackLayout.GestureRecognizers>
                                <StackLayout.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </StackLayout.HeightRequest>
                            </StackLayout>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.POL.Name}" InputViewPadding="0"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.POL.Status}"
                                                   Style="{StaticResource SfInputLayout}">
                            <StackLayout x:Name="POL" Orientation="Horizontal" HeightRequest="23">
                                <Label Style="{StaticResource LabelStyleInDropDown}" Text="{Binding POLDefaultValue_L}" Margin="12,0,0,0"/>

                                <Image Style="{StaticResource DropDownImg}"/>
                                <StackLayout.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding POL_Picker_LCommand}"/>
                                </StackLayout.GestureRecognizers>
                                <StackLayout.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </StackLayout.HeightRequest>
                            </StackLayout>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.POD.Name}" InputViewPadding="0"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.POD.Status}"
                                                   Style="{StaticResource SfInputLayout}">
                            <StackLayout x:Name="POD" Orientation="Horizontal" HeightRequest="23">
                                <Label Style="{StaticResource LabelStyleInDropDown}" Text="{Binding PODDefaultValue_L}" Margin="12,0,0,0"/>

                                <Image Style="{StaticResource DropDownImg}"/>
                                <StackLayout.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding POD_Picker_LCommand}"/>
                                </StackLayout.GestureRecognizers>
                                <StackLayout.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </StackLayout.HeightRequest>
                            </StackLayout>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.DeliverPlace.Name}" IsVisible="{Binding labelobj.DeliverPlace.Status}"
                                                   Style="{StaticResource SfInputLayout}" InputViewPadding="0" >
                            <StackLayout x:Name="Deliveryplace" Orientation="Horizontal" HeightRequest="23"
                                         >
                                <Label Style="{StaticResource LabelStyleInDropDown}" Text="{Binding DeliverPlaceDefaultValue_L}" Margin="12,0,0,0"/>

                                <Image Style="{StaticResource DropDownImg}"/>
                                <StackLayout.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding DeliveryPlace_Picker_LCommand}"/>
                                </StackLayout.GestureRecognizers>
                                <StackLayout.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </StackLayout.HeightRequest>
                            </StackLayout>
                        </sfinput:SfTextInputLayout>
                    </StackLayout>
                    <StackLayout Grid.Row="0" Grid.Column="0" Orientation="Vertical" Padding="0,5,0,0" IsVisible="{Binding datesVisibility}" >
                        <StackLayout>

                            <sfinput:SfTextInputLayout Hint="{Binding labelobj.ETD.Name}" InputViewPadding="0"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.ETD.Status}" ShowHint="{Binding isETDVisible}"
                                                   Style="{StaticResource SfInputLayout}">
                                <Grid ClassId="ETD From">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding ETDFromSelectDatetext,Mode=TwoWay}"  Grid.Row="0" Grid.Column="0" Style="{StaticResource dateLabelStyle}"/>
                                    <Image Source="calendarIc.png" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand" HeightRequest="30" WidthRequest="30" VerticalOptions="CenterAndExpand"/>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ETDFromCommand,Mode=TwoWay}"  CommandParameter="{Reference DatepickerControl}"/>
                                    </Grid.GestureRecognizers>
                                    <Grid.HeightRequest>
                                        <OnPlatform x:TypeArguments="x:Double">
                                            <On Platform="iOS">47</On>
                                            <On Platform="Android">50</On>
                                        </OnPlatform>
                                    </Grid.HeightRequest>
                                </Grid>
                            </sfinput:SfTextInputLayout>

                            <sfinput:SfTextInputLayout Hint="{Binding labelobj.ETDto.Name}" InputViewPadding="0" 
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.ETDto.Status}" ShowHint="{Binding isETDtoVisible}"
                                                   Style="{StaticResource SfInputLayout}">
                                <Grid ClassId="ETD To">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding ETDToSelectDatetext}"  Grid.Row="0" Grid.Column="0"  Style="{StaticResource dateLabelStyle}"/>
                                    <Image  Source="calendarIc.png" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand" HeightRequest="30" WidthRequest="30" VerticalOptions="CenterAndExpand"/>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ETDToCommand}"  CommandParameter="{Reference DatepickerControl}"/>
                                    </Grid.GestureRecognizers>
                                    <Grid.HeightRequest>
                                        <OnPlatform x:TypeArguments="x:Double">
                                            <On Platform="iOS">47</On>
                                            <On Platform="Android">50</On>
                                        </OnPlatform>
                                    </Grid.HeightRequest>
                                </Grid>
                            </sfinput:SfTextInputLayout>

                            <sfinput:SfTextInputLayout Hint="{Binding labelobj.ETA.Name}" InputViewPadding="0"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.ETA.Status}"
                                                   Style="{StaticResource SfInputLayout}">
                                <Grid ClassId="ETA From">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding ETAFromSelectDatetext}"  Grid.Row="0" Grid.Column="0" Style="{StaticResource dateLabelStyle}"/>
                                    <Image  Source="calendarIc.png" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand" HeightRequest="30" WidthRequest="30" VerticalOptions="CenterAndExpand"/>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ETAFromCommand}"  CommandParameter="{Reference DatepickerControl}" />
                                    </Grid.GestureRecognizers>
                                    <Grid.HeightRequest>
                                        <OnPlatform x:TypeArguments="x:Double">
                                            <On Platform="iOS">47</On>
                                            <On Platform="Android">50</On>
                                        </OnPlatform>
                                    </Grid.HeightRequest>
                                </Grid>
                            </sfinput:SfTextInputLayout>

                            <sfinput:SfTextInputLayout Hint="{Binding labelobj.ETAto.Name}" InputViewPadding="0" 
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.ETAto.Status}" ShowHint="{Binding isETAtoVisible}"
                                                   Style="{StaticResource SfInputLayout}">
                                <Grid ClassId="ETA To" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding ETAToSelectDatetext}"  Grid.Row="0" Grid.Column="0" Style="{StaticResource dateLabelStyle}" />
                                    <Image Source="calendarIc.png" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand" HeightRequest="30" WidthRequest="30" VerticalOptions="CenterAndExpand"/>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ETAToCommand}"  CommandParameter="{Reference DatepickerControl}"/>
                                    </Grid.GestureRecognizers>
                                    <Grid.HeightRequest>
                                        <OnPlatform x:TypeArguments="x:Double">
                                            <On Platform="iOS">47</On>
                                            <On Platform="Android">50</On>
                                        </OnPlatform>
                                    </Grid.HeightRequest>
                                </Grid>
                            </sfinput:SfTextInputLayout>

                            <sfinput:SfTextInputLayout Hint="{Binding labelobj.DeliveryDate.Name}" InputViewPadding="0"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.DeliveryDate.Status}" ShowHint="{Binding isDeliveryDatefromisible}"
                                                   Style="{StaticResource SfInputLayout}">
                                <Grid ClassId="Delivery From">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding DeliveryFromSelectDatetext}"  Grid.Row="0" Grid.Column="0" Style="{StaticResource dateLabelStyle}"/>
                                    <Image Source="calendarIc.png" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand" HeightRequest="30" WidthRequest="30" VerticalOptions="CenterAndExpand" />
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding DeliveryFromCommand}"  CommandParameter="{Reference DatepickerControl}"/>
                                    </Grid.GestureRecognizers>
                                    <Grid.HeightRequest>
                                        <OnPlatform x:TypeArguments="x:Double">
                                            <On Platform="iOS">47</On>
                                            <On Platform="Android">50</On>
                                        </OnPlatform>
                                    </Grid.HeightRequest>
                                </Grid>
                            </sfinput:SfTextInputLayout>

                            <sfinput:SfTextInputLayout Hint="{Binding labelobj.DeliveryDateto.Name}" InputViewPadding="0"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.DeliveryDateto.Status}" ShowHint="{Binding isDeliveryDatetoVisible}"
                                                   Style="{StaticResource SfInputLayout}">
                                <Grid ClassId="Delivery To">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding DeliveryToSelectDatetext}"  Grid.Row="0" Grid.Column="0" Style="{StaticResource dateLabelStyle}"/>
                                    <Image  Source="calendarIc.png" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand"  VerticalOptions="CenterAndExpand"/>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer  Command="{Binding DeliveryToCommand}"  CommandParameter="{Reference DatepickerControl}" />
                                    </Grid.GestureRecognizers>
                                    <Grid.HeightRequest>
                                        <OnPlatform x:TypeArguments="x:Double">
                                            <On Platform="iOS">47</On>
                                            <On Platform="Android">50</On>
                                        </OnPlatform>
                                    </Grid.HeightRequest>
                                </Grid>
                            </sfinput:SfTextInputLayout>

                            <sfinput:SfTextInputLayout Hint="{Binding labelobj.SiteArrival.Name}" InputViewPadding="0"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.SiteArrival.Status}" IsHintAlwaysFloated="True"
                                                   Style="{StaticResource SfInputLayout}">
                                <Grid ClassId="Onsite From">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding OnsiteDSelectDatetext}"  Grid.Row="0" Grid.Column="0" Style="{StaticResource dateLabelStyle}"/>
                                    <Image  Source="calendarIc.png" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand"  VerticalOptions="CenterAndExpand"/>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding OnsiteFromCommand}"  CommandParameter="{Reference DatepickerControl}"/>
                                    </Grid.GestureRecognizers>
                                    <Grid.HeightRequest>
                                        <OnPlatform x:TypeArguments="x:Double">
                                            <On Platform="iOS">47</On>
                                            <On Platform="Android">50</On>
                                        </OnPlatform>
                                    </Grid.HeightRequest>
                                </Grid>
                            </sfinput:SfTextInputLayout>

                            <sfinput:SfTextInputLayout Hint="{Binding labelobj.SiteArrivalto.Name}" InputViewPadding="0"
                                                   HorizontalOptions="Start" IsVisible="{Binding labelobj.SiteArrivalto.Status}" ShowHint="{Binding isSiteArrivaltoVisible}"
                                                   Style="{StaticResource SfInputLayout}" IsHintAlwaysFloated="False">
                                <Grid ClassId="Onsite To">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding OnsiteToSelectDatetext}" Grid.Row="0" Grid.Column="0"  Style="{StaticResource dateLabelStyle}" />
                                    <Image Source="calendarIc.png" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand" HeightRequest="30" WidthRequest="30" VerticalOptions="CenterAndExpand"/>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding OnsiteToCommand}"  CommandParameter="{Reference DatepickerControl}" />
                                    </Grid.GestureRecognizers>
                                    <Grid.HeightRequest>
                                        <OnPlatform x:TypeArguments="x:Double">
                                            <On Platform="iOS">47</On>
                                            <On Platform="Android">50</On>
                                        </OnPlatform>
                                    </Grid.HeightRequest>
                                </Grid>
                            </sfinput:SfTextInputLayout>
                        </StackLayout>
                        <Grid Grid.Row="1">
                            <CustomDate:NullableDatePicker PlaceHolder="MM/dd/yyyy" x:Name="DatepickerControl" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand"/>
                            <StackLayout BackgroundColor="White"/>
                        </Grid>
                    </StackLayout>
                </Grid>
            </ScrollView>
            <Grid Grid.Row="2" HorizontalOptions="FillAndExpand" VerticalOptions="End" BackgroundColor="White" Padding="7,0,7,4" HeightRequest="45">

                <sfbuttons:SfButton  HorizontalOptions="FillAndExpand" Grid.Column="0" Command="{Binding resetCommand}" 
                                     Style="{StaticResource SfBtnRed}">
                    <sfbuttons:SfButton.Content>
                        <Grid HorizontalOptions="CenterAndExpand"  VerticalOptions="CenterAndExpand" Padding="10,0,10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <FontAwsm:FontAwesomeIconLabel Grid.Column="0" Text="{x:Static StaticIcons:Icons.undo}"
                                                           Style="{StaticResource FontAwsmLblSfbutton}"/>
                            <Label Text="{Binding labelobj.ResetBtn.Name}" Grid.Column="1"
                                   Style="{StaticResource SfButtonTextLbl}"></Label>
                        </Grid>
                    </sfbuttons:SfButton.Content>
                    <sfbuttons:SfButton.Behaviors>
                        <behaviors:ViewTappedButtonBehavior Command="{Binding OnValidationCommand}" AnimationType="Scale"/>
                    </sfbuttons:SfButton.Behaviors>
                </sfbuttons:SfButton>

                <sfbuttons:SfButton AutomationId="AutoSearchForFilterBtn" HorizontalOptions="FillAndExpand" Grid.Column="1"
                                    Command="{Binding applyCommand}" Style="{StaticResource SfBtnBlue}">
                    <sfbuttons:SfButton.Content>
                        <Grid HorizontalOptions="Center" VerticalOptions="CenterAndExpand" Padding="10,0,10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <FontAwsm:FontAwesomeIconLabel Grid.Column="0" Text="{x:Static StaticIcons:Icons.SearchIc}"
                                                           Style="{StaticResource FontAwsmLblSfbutton}"/>
                            <Label Text="{Binding labelobj.SearchBtn.Name}" Grid.Column="1" Style="{StaticResource SfButtonTextLbl}"></Label>
                        </Grid>
                    </sfbuttons:SfButton.Content>
                    <sfbuttons:SfButton.Behaviors>
                        <behaviors:ViewTappedButtonBehavior Command="{Binding OnValidationCommand}" AnimationType="Scale"/>
                    </sfbuttons:SfButton.Behaviors>
                </sfbuttons:SfButton>
            </Grid>
        </Grid>
        <ContentView Grid.Row="0" IsVisible="{Binding SearchContentView}">
            <Frame BackgroundColor="White" CornerRadius="8" BorderColor="Gray">
                <StackLayout BackgroundColor="White">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="360"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <border:SfBorder BorderColor="Black"  CornerRadius="5" BorderWidth="1">
                                <cusEntry:MyEntry x:Name="DeliverPlaceEntrySearch" Grid.Column="0" TextColor="Black" Placeholder="Search..." TextChanged="SearchPlaceEntry_TextChanged"/>
                            </border:SfBorder>
                            <Image Grid.Column="1" Source="cross.png">
                                <Image.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="ClosePop_Tapped"/>
                                </Image.GestureRecognizers>
                            </Image>
                        </Grid>
                        <Label Grid.Row="1" Text="{Binding NoResultsLbl}" TextColor="Black" IsVisible="{Binding NoResultsIsVisibleLbl}"/>
                        <StackLayout Grid.Row="1" Margin="0,5,0,0" IsVisible="{Binding DeliverPlaceListViewStack}">
                            <ListView x:Name="DeliverPlaceListView" BackgroundColor="White" HasUnevenRows="True" SeparatorVisibility="None" ItemsSource="{Binding ListOfPlaceName,Mode=TwoWay}" ItemTapped="SearchItemTapped">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <ViewCell>
                                            <StackLayout Padding="0,5,0,5">
                                                <Label Text="{Binding Name,Mode=TwoWay}" VerticalTextAlignment="Center"/>
                                                <BoxView BackgroundColor="Gray" HeightRequest="1"/>
                                            </StackLayout>
                                        </ViewCell>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </StackLayout>
                    </Grid>
                </StackLayout>
            </Frame>
        </ContentView>
        <ContentView IsVisible="{Binding IndicatorVisibility}" BackgroundColor="Transparent" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
            <Frame Style="{StaticResource FmForActivityIndicator}">
                <StackLayout Padding="15">
                    <ActivityIndicator Style="{StaticResource ActivityIndicatorStyle}"/>
                    <Label Style="{StaticResource ActivityIndicatorLbl}"/>
                </StackLayout>
            </Frame>
        </ContentView>
    </AbsoluteLayout>
</ContentPage>