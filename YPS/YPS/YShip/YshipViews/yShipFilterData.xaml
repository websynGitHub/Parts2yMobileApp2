<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
                xmlns:border="clr-namespace:Syncfusion.XForms.Border;assembly=Syncfusion.Core.XForms"
             xmlns:cusEntry="clr-namespace:YPS.CustomRender" BackgroundColor="White"
             xmlns:CustomDate="clr-namespace:YPS.CustomRenders"
             x:Class="YPS.YShip.YshipViews.yShipFilterData"
             xmlns:sfinput="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
             xmlns:combobox="clr-namespace:Syncfusion.XForms.ComboBox;assembly=Syncfusion.SfComboBox.XForms"
             xmlns:sfbuttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
             xmlns:StaticIcons="clr-namespace:YPS.CommonClasses"
              xmlns:FontAwsm="clr-namespace:YPS.CustomRenders"
             xmlns:behaviors="clr-namespace:YPS.Behaviours">

    <NavigationPage.TitleView>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Text="Search Data" Style="{StaticResource LblTitleName}"/>
            <Image Grid.Column="1" Source="home.png" Margin="0,0,5,0">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Tapped="GoToHome_Tapped"/>
                </Image.GestureRecognizers>
            </Image>
        </Grid>
    </NavigationPage.TitleView>
    <AbsoluteLayout BackgroundColor="White">
        <Grid BackgroundColor="White" RowSpacing="0" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <StackLayout Grid.Row="0" Spacing="0" Orientation="Horizontal" >
                <StackLayout HorizontalOptions="FillAndExpand">
                    <Label x:Name="keyName" ClassId="key" Text="Key" TextColor="{Binding headerTextColor}"  BackgroundColor="{Binding headerBgColor}" Style="{StaticResource filterTabStyle}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding tabClickCmd}" CommandParameter="{Reference keyName}"/>
                        </Label.GestureRecognizers>
                    </Label>
                    <BoxView HeightRequest="3" HorizontalOptions="FillAndExpand" BackgroundColor="#269DC9" IsVisible="{Binding headerbox}"/>
                </StackLayout>
                <StackLayout HorizontalOptions="FillAndExpand">
                    <Label x:Name="locationName" ClassId="location" Text="Location" TextColor="{Binding locationTextColor}" BackgroundColor="{Binding locationBgColor}" Style="{StaticResource filterTabStyle}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding tabClickCmd}" CommandParameter="{Reference locationName}"/>
                        </Label.GestureRecognizers>
                    </Label>
                    <BoxView HeightRequest="3" HorizontalOptions="FillAndExpand" BackgroundColor="#269DC9" IsVisible="{Binding locationbox}"/>
                </StackLayout>
                <StackLayout HorizontalOptions="FillAndExpand">
                    <Label x:Name="dateName" ClassId="date" Text="Dates" TextColor="{Binding datesTextColor}" BackgroundColor="{Binding datesBgColor}" Style="{StaticResource filterTabStyle}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding tabClickCmd}" CommandParameter="{Reference dateName}"/>
                        </Label.GestureRecognizers>
                    </Label>
                    <BoxView HeightRequest="3" HorizontalOptions="FillAndExpand" BackgroundColor="#269DC9" IsVisible="{Binding datebox}"/>
                </StackLayout>
            </StackLayout>
            <ScrollView Grid.Row="1">
                <Grid BackgroundColor="White" Padding="15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1"/>
                        <RowDefinition Height="1"/>
                        <RowDefinition Height="1"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <StackLayout Grid.Row="0" Grid.Column="0" Orientation="Vertical" Spacing="5" IsVisible="{Binding headerVisibility}">

                        <sfinput:SfTextInputLayout IsVisible="{Binding labelobj.yBkgNumber.Status}" Hint="{Binding labelobj.yBkgNumber.Name}" 
                                                   InputViewPadding="12,0,0,0" Style="{StaticResource SfInputLayout}">
                            <Entry Text="{Binding ybkgNumber}">
                                <Entry.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </Entry.HeightRequest>
                            </Entry>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout InputViewPadding="12,0,0,0" Hint="{Binding labelobj.yShipBkgNumber.Name}" 
                                                   IsVisible="{Binding labelobj.yShipBkgNumber.Status}" Style="{StaticResource SfInputLayout}">
                            <Entry Text="{Binding yshipBkgNumber}">
                                <Entry.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </Entry.HeightRequest>
                            </Entry>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout InputViewPadding="12,0,0,0" Hint="{Binding labelobj.ShippingNumber.Name}" 
                                                   IsVisible="{Binding labelobj.ShippingNumber.Status}" Style="{StaticResource SfInputLayout}">
                            <Entry Text="{Binding shipNumber}">
                                <Entry.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </Entry.HeightRequest>
                            </Entry>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout InputViewPadding="12,0,0,0" Hint="{Binding labelobj.BkgRefNumber.Name}" 
                                                   IsVisible="{Binding labelobj.BkgRefNumber.Status}" Style="{StaticResource SfInputLayout}">
                            <Entry Text="{Binding bkgRefnumber}">
                                <Entry.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </Entry.HeightRequest>
                            </Entry>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.BkgConfirm.Name}" IsVisible="{Binding labelobj.BkgConfirm.Status}"
                                                   Style="{StaticResource SfInputLayout}">
                            <combobox:SfComboBox DataSource="{Binding bkgConfirmAllItems}" Text="{Binding bkgConfirmDDLDisplayVal,Mode=TwoWay}"
                                                 SelectedItem="{Binding selectedBkgConfirm}" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand">
                                <combobox:SfComboBox.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">20</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </combobox:SfComboBox.HeightRequest>
                            </combobox:SfComboBox>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.Cancel.Name}" IsVisible="{Binding labelobj.Cancel.Status}"
                                                   Style="{StaticResource SfInputLayout}">
                            <combobox:SfComboBox DataSource="{Binding cancelAllItems}" Text="{Binding cancelDDLDisplayVal,Mode=TwoWay}"
                                                 SelectedItem="{Binding selectedCancelValue}" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand">
                                <combobox:SfComboBox.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">20</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </combobox:SfComboBox.HeightRequest>
                            </combobox:SfComboBox>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.Completed.Name}" IsVisible="{Binding labelobj.Completed.Status}"
                                                   Style="{StaticResource SfInputLayout}">
                            <combobox:SfComboBox DataSource="{Binding completedAllItems}" Text="{Binding completeDDLDisplayVal,Mode=TwoWay}"
                                                SelectedItem="{Binding selectedCompletedValue}" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand">
                                <combobox:SfComboBox.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">20</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </combobox:SfComboBox.HeightRequest>
                            </combobox:SfComboBox>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout Hint="{Binding labelobj.EqmtType.Name}" IsVisible="{Binding labelobj.EqmtType.Status}"
                                                   Style="{StaticResource SfInputLayout}">
                            <combobox:SfComboBox DataSource="{Binding eqmtTypeAllItems}" Text="{Binding eqmtTypeDDLDisplayVal,Mode=TwoWay}"
                                                SelectedItem="{Binding selectedEqmtTypeValue}" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand">
                                <combobox:SfComboBox.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">20</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </combobox:SfComboBox.HeightRequest>
                            </combobox:SfComboBox>
                        </sfinput:SfTextInputLayout>
                    </StackLayout>

                    <StackLayout Grid.Row="0" Grid.Column="0" Orientation="Vertical" Padding="0,5,0,0" IsVisible="{Binding locationVisibility}">

                        <sfinput:SfTextInputLayout x:Name="oriSearchlayout" Hint="{Binding labelobj.OriSearch.Name}" InputViewPadding="0"
                                                   IsVisible="{Binding labelobj.OriSearch.Status}" Style="{StaticResource SfInputLayout}">
                            <StackLayout x:Name="orisearchComboBox" Orientation="Horizontal" HeightRequest="23">
                                <Label Style="{StaticResource LabelStyleInDropDown}" Text="{Binding oriSearch}" Margin="14,0,0,0"/>

                                <Image Style="{StaticResource DropDownImg}"/>
                                <StackLayout.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding OriSearchPicker}"/>
                                </StackLayout.GestureRecognizers>
                                <StackLayout.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </StackLayout.HeightRequest>
                            </StackLayout>
                        </sfinput:SfTextInputLayout>

                        <sfinput:SfTextInputLayout x:Name="desSearchlayout" Hint="{Binding labelobj.DestSearch.Name}" InputViewPadding="0"
                                                  IsVisible="{Binding labelobj.DestSearch.Status}" Style="{StaticResource SfInputLayout}">

                            <StackLayout x:Name="destsearchComboBox" Orientation="Horizontal" HeightRequest="23">
                                <Label Style="{StaticResource LabelStyleInDropDown}" Text="{Binding destSearch}" Margin="14,0,0,0"/>

                                <Image Style="{StaticResource DropDownImg}"/>
                                <StackLayout.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding DestSearchPicker}"/>
                                </StackLayout.GestureRecognizers>
                                <StackLayout.HeightRequest>
                                    <OnPlatform x:TypeArguments="x:Double">
                                        <On Platform="iOS">47</On>
                                        <On Platform="Android">50</On>
                                    </OnPlatform>
                                </StackLayout.HeightRequest>
                            </StackLayout>
                        </sfinput:SfTextInputLayout>
                    </StackLayout>

                    <StackLayout Grid.Row="0" Grid.Column="0" Orientation="Vertical" Padding="0,5,0,0" IsVisible="{Binding datesVisibility}" >
                        <StackLayout>

                            <sfinput:SfTextInputLayout InputViewPadding="0" ShowHint="{Binding showpickupdatehint}" Hint="{Binding labelobj.ReqPickupDate.Name}"
                                                       IsVisible="{Binding labelobj.ReqPickupDate.Status}" Style="{StaticResource SfInputLayout}">
                                <Grid ClassId="ETD From">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding ReqPickUpDateSelected,Mode=TwoWay}" x:Name="reqPickUpDateName"  Grid.Row="0" Grid.Column="0" Style="{StaticResource dateLabelStyle}"/>
                                    <Image Source="calendarIc.png" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand" HeightRequest="30" WidthRequest="30" VerticalOptions="CenterAndExpand"/>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ReqPickUpDateTapCmd,Mode=TwoWay}"  CommandParameter="{Reference DatepickerControl}"/>
                                    </Grid.GestureRecognizers>
                                    <Grid.HeightRequest>
                                        <OnPlatform x:TypeArguments="x:Double">
                                            <On Platform="iOS">47</On>
                                            <On Platform="Android">50</On>
                                        </OnPlatform>
                                    </Grid.HeightRequest>
                                </Grid>
                            </sfinput:SfTextInputLayout>

                            <sfinput:SfTextInputLayout ShowHint="{Binding showpickuptimehint}" Hint="{Binding labelobj.PickupTime.Name}"  
                                                      InputViewPadding="0" IsVisible="{Binding labelobj.PickupTime.Status}" Style="{StaticResource SfInputLayout}">
                                <Grid ClassId="ETD To">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding PickUpTimeSelected}"  Grid.Row="0" Grid.Column="0"  Style="{StaticResource dateLabelStyle}"/>
                                    <Image  Source="TimerIc.png" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand" HeightRequest="30" WidthRequest="30" VerticalOptions="CenterAndExpand"/>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding pickerTimeClickCmd}"  CommandParameter="{Reference PickUpTimePicker}"/>
                                    </Grid.GestureRecognizers>
                                    <Grid.HeightRequest>
                                        <OnPlatform x:TypeArguments="x:Double">
                                            <On Platform="iOS">47</On>
                                            <On Platform="Android">50</On>
                                        </OnPlatform>
                                    </Grid.HeightRequest>
                                </Grid>
                            </sfinput:SfTextInputLayout>

                            <sfinput:SfTextInputLayout ShowHint="{Binding showdeldatehint}" Hint="{Binding labelobj.ReqDeliveryDate.Name}" 
                                                        InputViewPadding="0" IsVisible="{Binding labelobj.ReqDeliveryDate.Status}" Style="{StaticResource SfInputLayout}">
                                <Grid ClassId="ETA From">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding ReqDeliveryDateSelected}"  Grid.Row="0" Grid.Column="0" Style="{StaticResource dateLabelStyle}"/>
                                    <Image  Source="calendarIc.png" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand" HeightRequest="30" WidthRequest="30" VerticalOptions="CenterAndExpand"/>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding reqDelivertyDateCmd}"  CommandParameter="{Reference DatepickerControl}" />
                                    </Grid.GestureRecognizers>
                                    <Grid.HeightRequest>
                                        <OnPlatform x:TypeArguments="x:Double">
                                            <On Platform="iOS">47</On>
                                            <On Platform="Android">50</On>
                                        </OnPlatform>
                                    </Grid.HeightRequest>
                                </Grid>
                            </sfinput:SfTextInputLayout>

                            <sfinput:SfTextInputLayout ShowHint="{Binding showdeltimehint}" Hint="{Binding labelobj.DeliveryTime.Name}"
                                                       InputViewPadding="0" IsVisible="{Binding labelobj.DeliveryTime.Status}" Style="{StaticResource SfInputLayout}">
                                <Grid ClassId="ETA To">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding DeliveryTimeSelected}"  Grid.Row="0" Grid.Column="0" Style="{StaticResource dateLabelStyle}" />
                                    <Image Source="TimerIc.png" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand" HeightRequest="50" WidthRequest="30" VerticalOptions="CenterAndExpand"/>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding pickerTimeClickCmd}"  CommandParameter="{Reference DeliveryTimePicker}"/>
                                    </Grid.GestureRecognizers>
                                    <Grid.HeightRequest>
                                        <OnPlatform x:TypeArguments="x:Double">
                                            <On Platform="iOS">47</On>
                                            <On Platform="Android">50</On>
                                        </OnPlatform>
                                    </Grid.HeightRequest>
                                </Grid>
                            </sfinput:SfTextInputLayout>


                        </StackLayout>
                        <Grid Grid.Row="1">
                            <CustomDate:NullableDatePicker PlaceHolder="MM/dd/yyyy" x:Name="DatepickerControl" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand"/>
                            <StackLayout BackgroundColor="White"/>
                        </Grid>
                        <Grid Grid.Row="2">
                            <TimePicker x:Name="PickUpTimePicker" ClassId="pickuptime" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand">
                                <TimePicker.Format>HH:mm tt</TimePicker.Format>
                            </TimePicker>
                            <StackLayout BackgroundColor="White"/>
                        </Grid>
                        <Grid Grid.Row="3">
                            <TimePicker x:Name="DeliveryTimePicker" ClassId="deliverytime" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand">
                                <TimePicker.Format>HH:mm tt</TimePicker.Format>
                            </TimePicker>
                            <StackLayout BackgroundColor="White"/>
                        </Grid>
                    </StackLayout>
                </Grid>
            </ScrollView>
            <Grid Grid.Row="2" HorizontalOptions="FillAndExpand" VerticalOptions="End" BackgroundColor="White" Padding="7,0,7,4" HeightRequest="45">

                <sfbuttons:SfButton x:Name="resetButton" ClassId="reset" Grid.Column="0"
                                    Command="{Binding searchData}" CommandParameter="{Reference resetButton}"
                                    HorizontalOptions="FillAndExpand" Style="{StaticResource SfBtnRed}">
                    <sfbuttons:SfButton.Content>
                        <Grid HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand" Padding="10,0,10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <FontAwsm:FontAwesomeIconLabel Grid.Column="0" Text="{x:Static StaticIcons:Icons.undo}"
                                                           Style="{StaticResource FontAwsmLblSfbutton}"/>
                            <Label Text="{Binding labelobj.ResetBtn.Name}" Grid.Column="1" Style="{StaticResource SfButtonTextLbl}"></Label>
                        </Grid>
                    </sfbuttons:SfButton.Content>
                    <sfbuttons:SfButton.Behaviors>
                        <behaviors:ViewTappedButtonBehavior Command="{Binding OnValidationCommand}" AnimationType="Scale"/>
                    </sfbuttons:SfButton.Behaviors>
                </sfbuttons:SfButton>

                <sfbuttons:SfButton x:Name="searchButton" ClassId="search" AutomationId="AutoSearchForFilterBtn" HorizontalOptions="FillAndExpand"
                                    Command="{Binding searchData}" CommandParameter="{Reference searchButton}" Grid.Column="1" Style="{StaticResource SfBtnBlue}">
                    <sfbuttons:SfButton.Content>
                        <Grid HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand" Padding="10,0,10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <FontAwsm:FontAwesomeIconLabel Grid.Column="0" Text="{x:Static StaticIcons:Icons.SearchIc}" Style="{StaticResource FontAwsmLblSfbutton}"/>
                            <Label Text="{Binding labelobj.SearchBtn.Name}" Grid.Column="1" Style="{StaticResource SfButtonTextLbl}"></Label>
                        </Grid>
                    </sfbuttons:SfButton.Content>
                    <sfbuttons:SfButton.Behaviors>
                        <behaviors:ViewTappedButtonBehavior Command="{Binding OnValidationCommand}" AnimationType="Scale"/>
                    </sfbuttons:SfButton.Behaviors>
                </sfbuttons:SfButton>
            </Grid>
        </Grid>
        <ContentView Grid.Row="0" IsVisible="{Binding SearchContentView}">
            <Frame BackgroundColor="White" CornerRadius="8" BorderColor="Gray">
                <StackLayout BackgroundColor="White">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="360"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <border:SfBorder BorderColor="Black"  CornerRadius="5" BorderWidth="1">
                                <cusEntry:MyEntry x:Name="LocationSearchName" Grid.Column="0" TextColor="Black" Placeholder="Search..." TextChanged="SearchPlaceEntry_TextChanged"/>
                            </border:SfBorder>
                            <Image Grid.Column="1" Source="cross.png">
                                <Image.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="CloseLocationSearch"/>
                                </Image.GestureRecognizers>
                            </Image>
                        </Grid>
                        <Label Grid.Row="1" Text="{Binding NoResultsLbl}" TextColor="Black" IsVisible="{Binding NoResultsIsVisibleLbl}"/>
                        <StackLayout Grid.Row="1" Margin="0,5,0,0" IsVisible="{Binding isLocationListViewVisible}">
                            <ListView x:Name="LocationListViewName" BackgroundColor="White" HasUnevenRows="True" SeparatorVisibility="None" ItemsSource="{Binding SearchLocationResults,Mode=TwoWay}" ItemTapped="SearchItemTapped">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <ViewCell>
                                            <StackLayout Padding="0,5,0,5">
                                                <Label Text="{Binding Name,Mode=TwoWay}" VerticalTextAlignment="Center"/>
                                                <BoxView BackgroundColor="Gray" HeightRequest="1"/>
                                            </StackLayout>
                                        </ViewCell>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </StackLayout>
                    </Grid>
                </StackLayout>
            </Frame>
        </ContentView>
        <ContentView IsVisible="{Binding IndicatorVisibility}" BackgroundColor="Transparent" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
            <Frame Style="{StaticResource FmForActivityIndicator}">
                <StackLayout Padding="15">
                    <ActivityIndicator Style="{StaticResource ActivityIndicatorStyle}"/>
                    <Label Style="{StaticResource ActivityIndicatorLbl}"/>
                </StackLayout>
            </Frame>
        </ContentView>
    </AbsoluteLayout>
</ContentPage>